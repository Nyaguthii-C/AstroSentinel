<!DOCTYPE html>
<html>
<head>
    <title>AstroSentinel</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="apple-touch-icon" sizes="180x180" href="../assets/favicon/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="../assets/favicon/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="../assets/favicon/favicon-16x16.png">
    <link rel="manifest" href="../assets/favicon/site.webmanifest">
    <!-- Leaflet CSS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
        crossorigin="">
</head>
<body>
    <!-- map display here -->
    <div id="map" style="height: 600px; width:  100%;"></div>

    <!-- Leaflet JavaScript -->
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
        crossorigin=""></script>

    <!-- Bortle scale from sqm value-->
    <script src="bortleCalculator.js"></script>
    
    <!-- Initialize the map -->
    <script>
        // Initialize the map
        const map = L.map('map').setView([-1.2921, 36.8219], 13);

        // Add a tile layer
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom:  19,
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

        // Fetch marker data from the server
        fetch('/get-marker')
            .then(response => response.json())
            .then(markers => {
                // Create markers based on the fetched data
                markers.forEach(markerData => {
                    const { lat, lng, SQM_Reading, Bortle_Class, Reading_Day } = markerData;
                    console.log(markerData);
                    // Check if both latitude and longitude are defined
                    if (lat !== undefined && lng !== undefined) {
                        const marker = L.marker([lat, lng]).addTo(map);
                        marker.bindPopup('<b>SQM Reading (mag/arcsec²) :</b> ' + SQM_Reading + '<br><b>Bortle Class:</b> ' + Bortle_Class + '<br> <b>Date:</b> ' + Reading_Day).openPopup();
                    } else {
                        console.error('Invalid marker data:', markerData);
                    }
                });
            })
        .catch(error => console.error('Error fetching markers:', error));


        // Add marker to map on click
        // Event listener for map click
	map.on('click', async function (e) {
            var lat = e.latlng.lat;
            var lng = e.latlng.lng;

            var confirmAdd = confirm("Do you want to add a marker at this location?");
            var hasSQM = confirm("Do you have an SQM?");

            if (confirmAdd) {
                if (hasSQM) {
                    var SQM_Reading = prompt("Enter the SQM Reading: ");
                    var Bortle_Class = getBortle(SQM_Reading);
                    
                    if (!SQM_Reading) {
                         alert("Please enter SQM reading");
                         return;
                    }

                } else {              
                    var Bortle_Class = prompt("Enter the Bortle Class Reading: ");
                }
                var Reading_Day = prompt("Enter the date (YYYY-MM-DD): ");

                // verify date in input
                if (!Reading_Day) {
                    alert("Please select a date.");
                    return;
                }


                // verify the readings input
                if ((!SQM_Reading || (SQM_Reading >= 16 && SQM_Reading <= 22)) && (!Bortle_Class || (Bortle_Class >= 1  && Bortle_Class <= 9))) {

                    
                    // check if  date  format is correct
                    var dateRegex = /^\d{4}-\d{2}-\d{2}$/;
                    if (!Reading_Day.match(dateRegex)) {
                        alert("Please enter the date in the format YYYY-MM-DD.");
                        return;
                    }


                    // Send request to server to save the marker
                    try {
                        const response = await fetch('/add-marker', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({
                                lat,
                                lng,
                                SQM_Reading,
                                Bortle_Class,
                                Reading_Day
                            }),
                        }); 

                        const data = await response.json();
                        console.log(data);

                        // Add a marker to the map if the server successfully saved it
                        if (response.ok) {
                            var marker = L.marker([lat, lng]).addTo(map);
                            marker.bindPopup('<b>SQM Reading (mag/arcsec²) :</b> ' + SQM_Reading + '<br><b>Bortle Class:</b> ' + Bortle_Class + '<br> <b>Date:</b> ' + Reading_Day).openPopup();
                            alert('Marker added successfully! Thank you for your contribution.')
                        } else {
                            alert('Failed to save marker. Please try again.');
                        }
                    } catch (error) {
                        console.error('Error during marker addition:', error);
                        alert('An error occurred. Please try again.');
                    }
                } else {
                    alert('You have entered incorrect values.Please enter correct values!')
                }
            }
        });
    </script>
    <footer>
      <button><a href='/'>Return to HomePage</a></button>
    <footer>
</body>
</html>
